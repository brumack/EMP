{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bradrumack/Projects/employee-tracker/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/bradrumack/Projects/employee-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport { storeToken } from '../utils/handleToken';\nimport { local } from '../api/local';\nmodule.exports.setTime = function () {\n  setInterval(function () {\n    _this.setState({\n      currentTime: new Date()\n    });\n  }, 1000);\n}, module.exports.createEmployee =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(values) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return local.post(\"/employee/new\", values);\n\n          case 2:\n            response = _context.sent;\n            data = response.data;\n\n            if (!data.success) {\n              _this.handleError(data.message);\n            } else if (data.token) {\n              _this.setState({\n                token: data.token\n              });\n\n              storeToken(data.token);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), module.exports.login =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(credentials) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return local.post(\"/employee/login\", credentials);\n\n          case 2:\n            response = _context2.sent;\n            data = response.data;\n\n            if (!data.success) {\n              _this.handleError(data.message);\n            } else if (data.token) {\n              storeToken(data.token);\n\n              _this.setState({\n                token: data.token\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/bradrumack/Projects/employee-tracker/client/src/lib/methods.js"],"names":["storeToken","local","module","exports","setTime","setInterval","setState","currentTime","Date","createEmployee","values","post","response","data","success","handleError","message","token","login","credentials"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEAC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,YAAM;AAC7BC,EAAAA,WAAW,CAAC,YAAM;AAChB,IAAA,KAAI,CAACC,QAAL,CAAc;AAAEC,MAAAA,WAAW,EAAE,IAAIC,IAAJ;AAAf,KAAd;AACD,GAFU,EAER,IAFQ,CAAX;AAGD,CAJD,EAMEN,MAAM,CAACC,OAAP,CAAeM,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAgC,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPT,KAAK,CAACU,IAAN,kBAA4BD,MAA5B,CADO;;AAAA;AACxBE,YAAAA,QADwB;AAExBC,YAAAA,IAFwB,GAEjBD,QAAQ,CAACC,IAFQ;;AAG9B,gBAAI,CAACA,IAAI,CAACC,OAAV,EAAmB;AACjB,cAAA,KAAI,CAACC,WAAL,CAAiBF,IAAI,CAACG,OAAtB;AACD,aAFD,MAEO,IAAIH,IAAI,CAACI,KAAT,EAAgB;AACrB,cAAA,KAAI,CAACX,QAAL,CAAc;AAAEW,gBAAAA,KAAK,EAAEJ,IAAI,CAACI;AAAd,eAAd;;AACAjB,cAAAA,UAAU,CAACa,IAAI,CAACI,KAAN,CAAV;AACD;;AAR6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA,GANF,EAiBEf,MAAM,CAACC,OAAP,CAAee,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,kBAAMC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACElB,KAAK,CAACU,IAAN,oBAA8BQ,WAA9B,CADF;;AAAA;AACfP,YAAAA,QADe;AAEfC,YAAAA,IAFe,GAERD,QAAQ,CAACC,IAFD;;AAGrB,gBAAI,CAACA,IAAI,CAACC,OAAV,EAAmB;AACjB,cAAA,KAAI,CAACC,WAAL,CAAiBF,IAAI,CAACG,OAAtB;AACD,aAFD,MAEO,IAAIH,IAAI,CAACI,KAAT,EAAgB;AACrBjB,cAAAA,UAAU,CAACa,IAAI,CAACI,KAAN,CAAV;;AACA,cAAA,KAAI,CAACX,QAAL,CAAc;AAAEW,gBAAAA,KAAK,EAAEJ,IAAI,CAACI;AAAd,eAAd;AACD;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,GAjBF","sourcesContent":["import { storeToken } from '../utils/handleToken'\nimport { local } from '../api/local'\n\nmodule.exports.setTime = () => {\n  setInterval(() => {\n    this.setState({ currentTime: new Date() })\n  }, 1000)\n},\n\n  module.exports.createEmployee = async values => {\n    const response = await local.post(`/employee/new`, values)\n    const data = response.data\n    if (!data.success) {\n      this.handleError(data.message)\n    } else if (data.token) {\n      this.setState({ token: data.token })\n      storeToken(data.token)\n    }\n  },\n\n  module.exports.login = async credentials => {\n    const response = await local.post(`/employee/login`, credentials)\n    const data = response.data\n    if (!data.success) {\n      this.handleError(data.message)\n    } else if (data.token) {\n      storeToken(data.token)\n      this.setState({ token: data.token })\n    }\n  }"]},"metadata":{},"sourceType":"module"}