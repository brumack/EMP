{"ast":null,"code":"var _this = this;\n\nimport { storeToken } from '../utils/handleToken';\nimport { local } from '../api/local'; // module.exports.createEmployee = async values => {\n//   const response = await local.post(`/employee/new`, values)\n//   const data = response.data\n//   if (!data.success) {\n//     this.handleError(data.message)\n//   } else if (data.token) {\n//     this.setState({ token: data.token })\n//     storeToken(data.token)\n//   }\n// }\n// module.exports.login = async credentials => {\n//   const response = await local.post(`/employee/login`, credentials)\n//   const data = response.data\n//   if (!data.success) {\n//     this.handleError(data.message)\n//   } else if (data.token) {\n//     storeToken(data.token)\n//     this.setState({ token: data.token })\n//   }\n// }\n\nvar methods = {\n  setTime: function setTime() {\n    return setInterval(function () {\n      _this.setState({\n        currentTime: new Date()\n      });\n    }, 1000);\n  }\n};\nexport default methods;","map":{"version":3,"sources":["/Users/bradrumack/Projects/employee-tracker/client/src/lib/methods.js"],"names":["storeToken","local","methods","setTime","setInterval","setState","currentTime","Date"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,KAAT,QAAsB,cAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE;AAAA,WAAMC,WAAW,CAAC,YAAM;AAC/B,MAAA,KAAI,CAACC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,IAAIC,IAAJ;AAAf,OAAd;AACD,KAFyB,EAEvB,IAFuB,CAAjB;AAAA;AADK,CAAhB;AAMA,eAAeL,OAAf","sourcesContent":["import { storeToken } from '../utils/handleToken'\nimport { local } from '../api/local'\n\n// module.exports.createEmployee = async values => {\n//   const response = await local.post(`/employee/new`, values)\n//   const data = response.data\n//   if (!data.success) {\n//     this.handleError(data.message)\n//   } else if (data.token) {\n//     this.setState({ token: data.token })\n//     storeToken(data.token)\n//   }\n// }\n\n// module.exports.login = async credentials => {\n//   const response = await local.post(`/employee/login`, credentials)\n//   const data = response.data\n//   if (!data.success) {\n//     this.handleError(data.message)\n//   } else if (data.token) {\n//     storeToken(data.token)\n//     this.setState({ token: data.token })\n//   }\n// }\n\nconst methods = {\n  setTime: () => setInterval(() => {\n    this.setState({ currentTime: new Date() })\n  }, 1000)\n}\n\nexport default methods\n"]},"metadata":{},"sourceType":"module"}