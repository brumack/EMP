{"ast":null,"code":"var _this = this;\n\nimport { storeToken } from '../utils/handleToken';\nimport local from '../api/local';\nexport default {\n  setTime: function setTime() {\n    return setInterval(function () {\n      return _this.setState({\n        currentTime: new Date()\n      });\n    }, 1000);\n  } // createEmployee: async values => {\n  //   const response = await local.post(`/employee/new`, values)\n  //   const data = response.data\n  //   if (!data.success) {\n  //     this.handleError(data.message)\n  //   } else if (data.token) {\n  //     this.setState({ token: data.token })\n  //     storeToken(data.token)\n  //   }\n  // },\n  // login: async credentials => {\n  //   const response = await local.post(`/employee/login`, credentials)\n  //   const data = response.data\n  //   if (!data.success) {\n  //     this.handleError(data.message)\n  //   } else if (data.token) {\n  //     storeToken(data.token)\n  //     this.setState({ token: data.token })\n  //   }\n  // }\n\n};","map":{"version":3,"sources":["/Users/bradrumack/Projects/employee-tracker/client/src/lib/methods.js"],"names":["storeToken","local","setTime","setInterval","setState","currentTime","Date"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAE;AAAA,WAAMC,WAAW,CAAC;AAAA,aAAM,KAAI,CAACC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,IAAIC,IAAJ;AAAf,OAAd,CAAN;AAAA,KAAD,EAAmD,IAAnD,CAAjB;AAAA,GADI,CAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBa,CAAf","sourcesContent":["import { storeToken } from '../utils/handleToken'\nimport local from '../api/local'\n\nexport default {\n  setTime: () => setInterval(() => this.setState({ currentTime: new Date() }), 1000)\n\n  // createEmployee: async values => {\n  //   const response = await local.post(`/employee/new`, values)\n  //   const data = response.data\n  //   if (!data.success) {\n  //     this.handleError(data.message)\n  //   } else if (data.token) {\n  //     this.setState({ token: data.token })\n  //     storeToken(data.token)\n  //   }\n  // },\n\n  // login: async credentials => {\n  //   const response = await local.post(`/employee/login`, credentials)\n  //   const data = response.data\n  //   if (!data.success) {\n  //     this.handleError(data.message)\n  //   } else if (data.token) {\n  //     storeToken(data.token)\n  //     this.setState({ token: data.token })\n  //   }\n  // }\n}"]},"metadata":{},"sourceType":"module"}